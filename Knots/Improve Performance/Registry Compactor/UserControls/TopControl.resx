<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblBar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sAAAAABJRU5ErkJggg==
</value>
  </data>
</root>