<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblBar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>